name: ci

on:
  push:
    paths-ignore:
      - '**.md'
      - '.rubocop.yml'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.rubocop.yml'

jobs:
  build-and-test:
    name: Build and test
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15]
        ruby-version: ['2.5', '2.6', '2.7']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Bundle install
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
    
    - name: Install protoc
      run: |
        PROTOC_VER="3.17.3"
        PROTOC_PKG=""
        if [ "$RUNNER_OS" == "Linux" ]; then
          PROTOC_PKG="protoc-$PROTOC_VER-linux-x86_64.zip"
        elif [ "$RUNNER_OS" == "macOS" ]; then
          PROTOC_PKG="protoc-$PROTOC_VER-osx-x86_64.zip"
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        echo "Installing $PROTOC_PKG"
        mkdir protoc && cd protoc
        wget https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VER/$PROTOC_PKG
        unzip $PROTOC_PKG
        chmod +x ./bin/protoc
        sudo mv ./bin/protoc /usr/local/bin/protoc
        sudo mv ./include/* /usr/local/include/
        rm -rf protoc
        protoc --version
        echo "$PROTOC_PKG installed successfully"

    - name: Build and install
      run: |
        gem build *.gemspec
        sudo gem install *.gem
        proto-convert -h
        echo "proto-convert installed successfully"

    - name: Test
      run: |
        cd test
        echo "Test # 1: JSON to Binary conversion (test.proto)"
        proto-convert -m j2b -p test.proto -t test.Message -i test.json -o test-out.bin
        diff test.bin test-out.bin && rm test-out.bin
        echo
        echo "Test # 2: Binary to JSON conversion (test.proto)"
        proto-convert -m b2j -p test.proto -t test.Message -i test.bin -o test-out.json
        cat test-out.json | jq .
        diff test.json test-out.json && rm test-out.json
        echo
        echo "Test # 3: JSON to Binary conversion (log.proto)"
        proto-convert -m j2b -p log.proto -t service.logging.Log -i log.json -o log-out.bin
        diff log.bin log-out.bin && rm log-out.bin
        echo
        echo "Test # 4: Binary to JSON conversion (log.proto)"
        proto-convert -m b2j -p log.proto -t service.logging.Log -i log.bin -o log-out.json
        cat log-out.json | jq .
        diff log.json log-out.json && rm log-out.json
        echo
        echo "--- [DONE] ---"
